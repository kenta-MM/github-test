name: Pull Request Link to Issue 
on: pull_request
jobs:
  issue-linkes:
      runs-on: ubuntu-latest
      permissions:
          pull-requests: write
          issues: read
      timeout-minutes: 1
      if: ${{ startsWith(github.head_ref, 'issue-') }}
      steps:
          - uses: tkt-actions/add-issue-links@v1.8.1
            with:
              repo-token: ${{ secrets.GITHUB_TOKEN }}
              branch-prefix: "issue-"
              link-style: 'body'
              resolve: 'true'
          - id: source
            run: |
                ISSUE_NUM="${HEAD_REF}"
                ISSUE_NUM="${ISSUE_NUM:6}"
                echo "issue_num=${ISSUE_NUM}" >> "$GITHUB_OUTPUT"
            env:
              HEAD_REF: ${{ github.head_ref }}
          - uses: actions/checkout@v4
          - name: Fetch Issue Data
            id: issue_data
            run: |
                echo "Fetching issue data for issue-${ISSUE_NUM}"
                CMD="gh api repos/${REPOSITORY}/issues/${ISSUE_NUM}"
                echo "Executing: ${CMD}"
                ISSUE_JSON=$(eval "${CMD}")

                # ラベルを抽出
                LABELS=$(echo "$ISSUE_JSON" | jq -r '.labels[].name' | tr '\n' ',' | sed 's/,$//')
                echo "Extracted Labels: ${LABELS}"
                echo "labels=${LABELS}" >> "$GITHUB_OUTPUT"
            env:
              REPOSITORY: ${{ github.repository }}
              ISSUE_NUM: ${{ steps.source.outputs.issue_num }}
              GH_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
          - name: Add Lables to PR
            run: | 
              echo "Adding labels to Pull Request: ${LABELS}"
              if [[ -n "${LABELS}" ]]; then
                CMD="gh pr edit ${PR_NUMBER} --add-label \"${LABELS}\""
                echo "Executing command: $CMD"
                eval "$CMD"
              else 
                echo "No labels found on the Issue."
              fi
            env:
              GH_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
              LABELS: ${{ steps.issue_data.outputs.labels }}
              PR_NUMBER: ${{ github.event.pull_request.number }}
          - name: Get Project ID
            id: get_project_id
            env:
              GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              PROJECT_NUM: 4
            run: |
              echo "Building GraphQL Command..."
              QUERY='
                query {
                  user(login: "kenta-MM") {
                    projectsV2(first: '"${PROJECT_NUM}"') {
                      nodes {
                        id
                        title
                      }
                    }
                  }
                }
              '

              echo "Executing GraphQL Query..."
              RESPONSE=$(gh api graphql -f query="$QUERY")
              
              echo "GraphQL Response:"
              echo "$RESPONSE"
              
              PROJECT_ID=$(echo "$RESPONSE" | jq -r '.data.user.projectsV2.nodes[] | select(.title=="家計簿アプリ開発") | .id')
              if [[ -z "$PROJECT_ID" ]]; then
                echo "❌ Error: Failed to retrieve Project ID"
                echo "Response was: $RESPONSE"
                exit 1
              fi

              echo "Project ID: $PROJECT_ID"
              echo "project_id=$PROJECT_ID" >> $GITHUB_OUTPUT
          - name: Add Project to PR
            run: |
              echo "Adding project to Pull Request"
              CMD="gh pr edit ${PR_NUMBER} --add-project \"4\""
              echo "Executing command: $CMD"
              eval "$CMD"
            env:
              GH_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
              PR_NUMBER: ${{ github.event.pull_request.number }}
        